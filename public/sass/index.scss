// variables for colors 
$color-primary:#55c57a;
$color-primary-dark:#28b485;
$color-secondary-light:#ffb900;
$color-secondary-dark:#ff7730;
$color-tertiary-light:#2998ff;
$color-tertiary-dark:#5643fa;
$color-orange:orange;
$color-primary-light:#7ed56f;
$color-grey-dark: #777;
$color-white:#fff;
$color-black:#000;
$color-grey-light-1:#f7f7f7;
$color-grey-light-2:#eee;
// my colors
$color-my-blue:#00203fff;
$color-my-green:#ADEFD1FF; // fonts
$color-my-red: #cc0033;
$color-my-purple: #7a0085;
$default-font-size:1.6rem;
// variables that comes under grid system 
$grid-width:114rem;
$gutter-vertical:8rem;
$gutter-horizontal:6rem;
//this are the basic defination of our project
// clearfix is used remove the error when we use float and hieght collapses 
// creating a mixin
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

*,
*::after,
 ::before {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}


/* 
  root font size if done in html selector 
  converting root font size values and migrating font-size from px to rem for building an better responsive pages so while building pages all the sizes are decreased simultaneously 
 */


/* '
     1 rem is equal to 10 px 
  */

html {
    /*
     here we are setting default font-size for the browser view 
     (10/16)=0.625*100=62.5%,0.625*20=12.5
     
     */
    font-size: 62.5%;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    /* padding: 30px; */
    // padding: 3rem;
}

// 
.blog {
    width: 90%;
    padding-top: 1.5rem;
    padding-left: 2rem;
    margin: 0 auto;
    margin-top: 3rem;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2); // width: 90%;
    &__img {
        // margin: 0 auto;
        margin-right: 5rem;
        margin-left: -10rem;
        margin-top: -3rem;
        padding: 3rem;
        width: 35rem;
        height: 35rem;
        padding: 4rem;
        display: inline-block;
        float: left;
        box-sizing: border-box;
        // box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    }
    // &__content {
    //     padding: .1rem;
    //     margin: 0 auto;
    //     margin-left: 8rem;
    // }
    // &__title {
    //     font-size: 3rem;
    //     padding: 2rem;
    //     padding-bottom: .1rem;
    //     padding-left: .2rem;
    //     padding-top: 0rem;
    //     text-transform: uppercase;
    //     color: #00103E;
    // }
    // &__date {
    //     font-size: 1.7rem;
    //     text-transform: uppercase;
    //     padding-bottom: 2rem;
    // }
    // &__data {
    //     font-size: 2rem;
    //     color: black;
    //     font-family: 'Lemonada', cursive;
    //     font-family: 'Noto Serif', serif;
    //     // font-family: 'Lemonada', cursive;
    //     // font-family: 'Lemonada', cursive;
    //     // font-family: 'Lemonada', cursive;
    //     // font-family: 'Dancing Script', cursive;
    // }
}

.row {
    max-width: $grid-width;
    // max-width = what max-width does if ur view port size is less than that of the size of the max-width size then 
    // it occupies the complete space 
    // background-color: #eee;
    margin: 0 auto; // trick to align anything in center
    margin-bottom: $gutter-vertical;
    &:not(:last-child) {
        // we dont want the last child to have margin bottom so wat not does is its does not apply the value to the last child
        margin-bottom: $gutter-vertical;
    }
    @include clearfix;
    // attribute selector 
    //^ this tells us that class starting with col-
    // "*" this tells us that class should contain col- 
    [class^="col-"] {
        // background-color: orangered;
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }
    .col-1-0f-2 {
        //calc() allows us to do mathematical calculations 
        width: calc((100% - #{$gutter-horizontal}) / 2); // # function is for working sass inside css 
        // inside calc is there all are case sensitive proper identation is required 
    }
    .col-1-0f-3 {
        width: calc((100% - 2*#{$gutter-horizontal}) / 3); // # function is for working sass inside css 
        // inside calc is there all are case sensitive proper identation is required 
        // @include clearfix;
    }
    .col-2-0f-3 {
        width: calc(2*((100% - 2*#{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    .col-1-0f-4 {
        width: calc((100% - 3*#{$gutter-horizontal}) / 4);
        //  formual for making grid 
        // (100%- (numberofgutter * width value))/4
    }
    .col-2-of-4 {
        width: calc(2*((100% - 3*#{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
    .col-3-0f-4 {
        width: calc(3*((100% - 3*#{$gutter-horizontal}) / 4) + 2*#{$gutter-horizontal});
    }
}